html {
  box-sizing: border-box;
  color: #000;
}

#topPlayers {
  text-align: center;
  color: white;
  font-size: 1.25rem;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

button {
  font-weight: 900;
}

body {
  overflow-x: hidden;
  background-color: #585858;
  padding: 1.25rem;
}

.Wrapper {
  max-width: 900px;
  margin: 0 auto;
  background-color: #aaa;
}

h1 {
  text-align: center;
  font-size: 3.125rem;
  color: rgb(216, 0, 0);
}

.hamburger {
  padding: 0.625rem;
  display: inline-block;
  cursor: pointer;
  background-color: transparent;
  border: 0;
  margin: 0;
  position: absolute;
  right: 1rem;
  top: 1rem;
}

.hamburger,
.sidebar {
  transition: transform 0.3s 0.1s ease-in-out;
}

.hamburger--active {
  transform: translatex(-250px);
}

.hamburger__box {
  width: 35px;
  height: 24px;
  display: inline-block;
  position: relative;
}

.hamburger__inner {
  width: 100%;
  height: 3px;
  background-color: white;
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
  transition: background-color 0.1s 0.2s ease-in-out;
}

.hamburger__inner::before,
.hamburger__inner::after {
  width: 100%;
  height: 3px;
  background-color: white;
  position: absolute;
  content: "";
  left: 0;
  transition: transform 0.2s 0.2s ease-in-out;
}

.hamburger__inner::before {
  top: -10px;
}

.hamburger__inner::after {
  top: 10px;
}

.hamburger--active .hamburger__inner {
  background-color: transparent;
}

.hamburger--active .hamburger__inner:before {
  transform: translateY(10px) rotate(45deg);
}

.hamburger--active .hamburger__inner:after {
  transform: translateY(-10px) rotate(-45deg);
}

.sidebar {
  height: 21, 4375rem;
  width: 250px;
  background-color: #777;
  position: absolute;
  top: 0;
  right: 0;
  transform: scale(0);
  border: 0.15rem solid black;
}

.sidebar--active {
  transform: scale(1);
}

.sidebar__list {
  margin: auto;
  list-style: none;
}

.sidebar__item {
  display: block;
  margin: 2rem;
  height: 2rem;
  width: 75%;
}

a {
  text-decoration: none;
  color: #444;
}

label {
  font-size: 1.6rem;
}

input,
option,
select {
  background-color: #ddd;
  border-color: black;
  text-align: center;
  height: 2rem;
  font-size: 1rem;
}

.Player {
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
}
.Player > input :not(.PlayerColor) {
  max-width: 15rem;
}

.PlayerColor {
  max-width: 4.5rem;
  min-width: 4rem;
}
li {
  margin-bottom: 1rem;
  border-bottom: 0.0625rem solid black;
}

#bottomMenu {
  margin-top: 4em;
  display: flex;
  justify-content: space-between;
}

#bottomMenu > * {
  background-color: white;
}

#bottomMenu * {
  text-align: center;
}

#winningCondition {
  padding: 0.25em;
  border: 0.15rem solid black;
}

#winningPlayer {
  border: 0.15rem solid rgb(6, 172, 0);
  max-width: 50%;
  max-width: 21.75rem;
  padding: 0.25em;
}

#winner {
  width: 8em;
  max-width: 100%;
}

#winningCondition input {
  width: 5em;
}

#saveCondition {
  margin: 1em;
}

#hint {
  max-width: calc(100vw - 5.6rem);
  color: white;
}

#playersContainerHidden {
  display: none;
}
